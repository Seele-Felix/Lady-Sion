# Lady Sion 项目文档管理规则

## 📋 文档架构理解

### 分层文档体系
Lady Sion采用分层文档架构，理解各层职责：

```
docs/
├── strategic/          # 战略层 - 长期稳定，项目愿景和系统概览
├── philosophy/         # 哲学层 - 核心理念，Seele Felix和Lady Sion哲学
├── architecture/       # 架构层 - 中期稳定，前后端架构设计
├── design/            # 设计层 - 中期稳定，UI设计和用户体验
├── technical/         # 技术层 - 短期迭代，具体技术实现指南
├── guides/           # 操作指南 - 经常更新，开发和配置指南
├── api/              # API文档 - 版本化管理
├── testing/          # 测试文档 - 持续更新
└── deployment/       # 部署文档 - 运维指南
```

### 文档状态标识
- ✅ 完成 - 文档已完成且经过验证
- 🚧 草稿 - 文档正在编写中，标记为[draft]
- 🔄 待完成 - 规划中但尚未开始编写

## 📝 文档编写规范

### 1. 中文文档标准
- **全部使用简体中文**，保持术语一致性
- 技术术语使用中英文对照：`领域驱动设计(DDD)`
- 代码和配置保持英文原样

### 2. Markdown格式规范
- 使用标准Markdown语法
- 代码块指定语言类型：```bash, ```typescript, ```json
- 表格使用标准格式，保持对齐
- 链接使用相对路径：`[文档名](./path/to/doc.md)`

### 3. 文档结构模板
每个文档应包含：
```markdown
# 文档标题

## 📋 概述
简要描述文档目的和内容

## 🎯 核心内容
详细内容展开

## 📚 相关文档
- [相关文档链接](./path/to/related.md)

## 🔄 更新记录
- 2024-xx-xx: 创建文档
```

### 4. 草稿文档规范
- 草稿文档文件名前缀：`[draft]filename.md`
- 在索引中标记为 🚧 草稿状态
- 草稿完成后移除[draft]前缀并更新索引

## 🔗 索引管理规则

### 1. 双重索引维护
在编写、更新或删除文档时，**必须同时更新**：
- `docs/README.md` - 文档中心索引
- 根目录 `README.md` - 项目主索引

### 2. 索引更新检查清单
当操作文档时，检查以下内容：
- [ ] 新文档是否已添加到对应分类表格中
- [ ] 文档链接是否正确（相对路径）
- [ ] 文档状态标识是否准确
- [ ] 文档描述是否简洁明确
- [ ] 目录结构图是否需要更新

### 3. 链接验证规则
- 确保所有链接指向实际存在的文件
- 使用相对路径，不使用绝对路径
- 移除或更新指向不存在文件的链接
- 新增文档时立即在索引中添加对应链接

## 📖 文档操作工作流

### 创建新文档
1. 确定文档所属分类层级
2. 使用标准文档模板创建文件
3. 在docs/README.md中添加索引条目
4. 在根目录README.md中添加索引条目（如适用）
5. 验证所有链接可用性

### 更新现有文档
1. 直接修改文档内容
2. 如果文档状态改变（草稿→完成），更新索引状态标识
3. 如果文档标题或用途改变，更新索引中的描述
4. 验证相关链接仍然有效

### 删除或移动文档
1. 在两个索引文件中移除相关条目
2. 检查其他文档中是否有指向该文档的链接
3. 更新或移除失效链接
4. 如果是重要文档，考虑添加重定向说明

### 组织重构
1. 如果调整目录结构，批量更新所有相关链接
2. 更新目录结构图
3. 确保索引分类与实际目录结构一致
4. 验证所有链接在新结构下仍然有效

## 🔍 文档质量检查

### 内容质量标准
- 每个文档都有明确的目标和受众
- 信息层次清晰，使用标准标题结构
- 包含必要的示例和代码片段
- 相关文档之间有适当的交叉引用

### 维护性检查
- 定期检查链接有效性
- 确保索引与实际文件结构同步
- 验证文档状态标识准确性
- 检查是否有孤立文档（未被索引引用）

## 🎯 AI助手操作指导

### 读取文档时
1. 优先查看docs/README.md了解文档全貌
2. 根据用户需求定位到具体分类
3. 验证文档是否为最新状态（非草稿）
4. 注意文档间的引用关系

### 编写文档时
1. 确定文档层级和分类
2. 使用标准模板和格式
3. 立即更新索引（双重索引）
4. 确保链接准确性
5. 设置适当的状态标识

### 更新文档时
1. 保持最小化修改原则
2. 只修改相关部分，避免不必要的格式调整
3. 更新状态标识（如从草稿到完成）
4. 验证修改后的链接有效性
5. 同步更新索引中的描述（如有变化）

## 🚨 重要注意事项

1. **索引同步是强制性的** - 任何文档变更都必须反映在索引中
2. **链接必须有效** - 不允许指向不存在文件的链接
3. **状态标识必须准确** - 确保文档状态与实际情况一致
4. **保持中文一致性** - 所有面向用户的内容都使用中文
5. **遵循分层原则** - 文档应放在正确的层级分类中

通过遵循这些规则，确保Lady Sion项目的文档体系保持清晰、准确和易于维护。 